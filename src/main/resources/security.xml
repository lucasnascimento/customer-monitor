<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<beans profile="DEV">

		<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
			<constructor-arg index="0">
				<util:list>
					<bean class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
						<property name="userDetailsService">
							<bean class="com.pearson.portfolio.security.AcademicoUserDetailsService" />
						</property>
						<property name="passwordEncoder">
							<bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />
						</property>
					</bean>
				</util:list>
			</constructor-arg>
		</bean>

		<bean id="usernamePasswordFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
			<property name="authenticationManager" ref="authenticationManager" />
			<property name="authenticationSuccessHandler">
				<bean class="com.pearson.portfolio.security.PearsonAuthenticationSuccessHandler" />
			</property>
		</bean>

		<bean id="authenticationEntryPoint" class="com.pearson.portfolio.security.UnAuthorizedAuthenticationEntryPoint" />

		<security:http entry-point-ref="authenticationEntryPoint" authentication-manager-ref="authenticationManager">
			<security:intercept-url pattern="/api/usuario/senha/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<security:intercept-url pattern="/api/login/primeiro-acesso" access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<security:intercept-url pattern="/api/**" access="ROLE_USER" />
			<security:custom-filter ref="usernamePasswordFilter" position="FORM_LOGIN_FILTER" />
			<security:logout />
		</security:http>
	</beans>

	<beans profile="TEST">

		<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
			<constructor-arg index="0">
				<util:list>
					<bean class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
						<property name="userDetailsService">
							<bean class="com.pearson.portfolio.security.AcademicoUserDetailsService" />
						</property>
						<property name="passwordEncoder">
							<bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />
						</property>
					</bean>
				</util:list>
			</constructor-arg>
		</bean>

		<bean id="usernamePasswordFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
			<property name="authenticationManager" ref="authenticationManager" />
			<property name="authenticationSuccessHandler">
				<bean class="com.pearson.portfolio.security.PearsonAuthenticationSuccessHandler" />
			</property>
		</bean>

		<bean id="authenticationEntryPoint" class="com.pearson.portfolio.security.UnAuthorizedAuthenticationEntryPoint" />

		<security:http entry-point-ref="authenticationEntryPoint" authentication-manager-ref="authenticationManager">
			<security:intercept-url pattern="/api/usuario/senha/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<security:intercept-url pattern="/api/login/primeiro-acesso" access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<security:intercept-url pattern="/api/**" access="ROLE_USER" />
			<security:custom-filter ref="usernamePasswordFilter" position="FORM_LOGIN_FILTER" />
			<security:logout />
		</security:http>
	</beans>

	<beans profile="HOMOLOGACAO">
		<bean id="unauthorizedEntryPoint" class="com.pearson.portfolio.security.UnauthorizedEntryPoint" />
		<bean id="authenticationSuccessHandler" class="com.pearson.portfolio.security.PearsonAuthenticationSuccessHandler" />

		<bean id="formFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
			<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
			<property name="authenticationManager" ref="authenticationManager" />
		</bean>

		<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
			<constructor-arg>
				<util:list>
					<bean class="com.pearson.portfolio.security.JossoAuthenticationProvider" />
				</util:list>
			</constructor-arg>
		</bean>

		<security:http entry-point-ref="unauthorizedEntryPoint" authentication-manager-ref="authenticationManager">

			<security:intercept-url pattern="/api/**" access="ROLE_USER" />
			<security:custom-filter ref="formFilter" position="FORM_LOGIN_FILTER" />
			<security:logout />
		</security:http>

	</beans>

	<beans profile="JOSSO">

		<bean id="entryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />

		<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
			<constructor-arg index="0">
				<bean class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
					<property name="preAuthenticatedUserDetailsService">
						<bean class="com.pearson.portfolio.security.AcademicoUserDetailsService" />
					</property>
				</bean>
			</constructor-arg>
		</bean>

		<bean id="jossoFilter" class="com.pearson.portfolio.security.JossoPreAuthenticationFilter">
			<property name="authenticationManager" ref="authenticationManager" />
			<property name="authenticationDetailsSource">
				<bean
					class="org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource">
					<property name="mappableRolesRetriever">
						<bean class="org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever" />
					</property>
					<property name="userRoles2GrantedAuthoritiesMapper">
						<bean class="org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper">
							<property name="convertAttributeToUpperCase" value="true" />
						</bean>
					</property>
				</bean>
			</property>
		</bean>

		<security:http authentication-manager-ref="authenticationManager" create-session="stateless"
			entry-point-ref="entryPoint">
			<!-- <security:jee mappable-roles="ADMINISTRADOR" user-service-ref="academicoUserDetailService"/> -->
			<security:intercept-url pattern="/api/usuario/senha/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<security:intercept-url pattern="/api/login/primeiro-acesso" access="IS_AUTHENTICATED_ANONYMOUSLY" />
			<security:intercept-url pattern="/api/**" access="ROLE_ADMINISTRADOR" />
			<security:custom-filter position="PRE_AUTH_FILTER" ref="jossoFilter" />
		</security:http>




	</beans>
</beans>
